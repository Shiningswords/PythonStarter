#  -------------------------------------------------------------------------------------------------
#  TASK 028 (Вывести матрицу 1)
#  -------------------------------------------------------------------------------------------------
#  На вход программе подаются два натуральных числа n и m, каждое на отдельной строке —
#  количество строк и столбцов в матрице. Далее вводятся сами элементы матрицы — слова, каждое на отдельной строке;
#  подряд идут элементы сначала первой строки, затем второй, и т.д.
#  Напишите программу, которая сначала считывает элементы матрицы один за другим, затем выводит их в виде матрицы.
#  -------------------------------------------------------------------------------------------------

# row, col, res = int(input()), int(input()), []
# for i in range(row):
#     res.append([0] * col)
# for i in range(row):
#     for j in range(col):
#         res[i][j] = input()
# for i in range(row):
#     for j in range(col):
#         print(res[i][j], end=' ')
#     print()

#  -------------------------------------------------------------------------------------------------
#  TASK 029 (Вывести матрицу 2)
#  -------------------------------------------------------------------------------------------------
#  На вход программе подаются два натуральных числа n и m, каждое на отдельной строке — количество строк и столбцов
#  в матрице. Далее вводятся сами элементы матрицы — слова, каждое на отдельной строке;
#  подряд идут элементы сначала первой строки, затем второй, и т.д.
#  Напишите программу, которая считывает элементы матрицы один за другим, выводит их в виде матрицы,
#  выводит пустую строку, и снова ту же матрицу, но уже поменяв местами строки со столбцами:
#  первая строка выводится как первый столбец, и так далее.
#  -------------------------------------------------------------------------------------------------

# row, col, res = int(input()), int(input()), []
# for i in range(row):
#     res.append([0] * col)
# for i in range(row):
#     for j in range(col):
#         res[i][j] = input()
# for i in range(row):
#     for j in range(col):
#         print(res[i][j], end=' ')
#     print()
# print()
# for i in range(col):
#     for j in range(row):
#         print(res[j][i], end=' ')
#     print()

#  -------------------------------------------------------------------------------------------------
#  TASK 030 (След матрицы)
#  -------------------------------------------------------------------------------------------------
#  Следом квадратной матрицы называется сумма элементов главной диагонали.
#  Напишите программу, которая выводит след заданной квадратной матрицы.
#  -------------------------------------------------------------------------------------------------

# row, res, total = int(input()), [], 0
# for i in range(row):
#     res.append([0] * row)
# for i in range(row):
#     res[i] = [int(i) for i in input().split()]
# for i in range(row):
#     total += res[i][i]
# print(total)

#  -------------------------------------------------------------------------------------------------
#  TASK 031 (Больше среднего)
#  -------------------------------------------------------------------------------------------------
#  Напишите программу, которая выводит количество элементов квадратной матрицы в каждой строке,
#  больших среднего арифметического элементов данной строки.
#  -------------------------------------------------------------------------------------------------

# row, res = int(input()), []
# for i in range(row):
#     res.append([0] * row)
# for i in range(row):
#     res[i] = [int(i) for i in input().split()]
# for i in range(row):
#     avg = sum(res[i]) / len(res[i])
#     counter = 0
#     for j in range(row):
#         if res[i][j] > avg:
#               counter  += 1
#     print(counter)

#  -------------------------------------------------------------------------------------------------
#  TASK 032 (Максимальный в области 1)
#  -------------------------------------------------------------------------------------------------
#  Напишите программу, которая выводит максимальный элемент в заштрихованной области квадратной матрицы (левая и нижняя)
#  -------------------------------------------------------------------------------------------------

# row, res = int(input()), []
# for i in range(row):
#     res.append([0] * row)
# for i in range(row):
#     res[i] = [int(i) for i in input().split()]
# mx = res[0][0]
# for i in range(row):
#     if max(res[i][:i+1]) > mx:
#         mx = max(res[i][:i+1])
# print(mx)

#  -------------------------------------------------------------------------------------------------
#  TASK 032 (Максимальный в области 2)
#  -------------------------------------------------------------------------------------------------
#  Напишите программу, которая выводит максимальный элемент в заштрихованной области квадратной матрицы (левая и правая)
#  -------------------------------------------------------------------------------------------------

# row, res, temp = int(input()), [], []
# for i in range(row):
#     res.append([0] * row)
# for i in range(row):
#     res[i] = [int(i) for i in input().split()]
# mx = res[0][0]
# for i in range(row):
#     for j in range(row):
#         if i >= j and i <= row - 1 - j or i <= j and i >= row - 1 - j:
#             temp.append(res[i][j])
# print(max(temp))

#  -------------------------------------------------------------------------------------------------
#  TASK 033 (Суммы четвертей)
#  -------------------------------------------------------------------------------------------------
#  Квадратная матрица разбивается на четыре четверти, ограниченные главной и побочной диагоналями:
#  верхнюю, нижнюю, левую и правую.
#  Напишите программу, которая вычисляет сумму элементов: верхней четверти; правой четверти;
#  нижней четверти; левой четверти.
#  -------------------------------------------------------------------------------------------------

# row, res, up, down, left, right = int(input()), [], [], [], [], []
# for i in range(row):
#     res.append([0] * row)
# for i in range(row):
#     res[i] = [int(i) for i in input().split()]
# for i in range(row):
#     for j in range(row):
#         if i < j and i < row - 1 - j:
#             up.append(res[i][j])
#         elif i > j and i > row - 1 - j:
#             down.append(res[i][j])
#         elif i > j and i < row - 1 - j:
#             left.append(res[i][j])
#         elif i < j and i > row - 1 - j:
#             right.append(res[i][j])
# print(f"Верхняя четверть: {sum(up)}\nПравая четверть: {sum(right)}\nНижняя четверть: "
#       f"{sum(down)}\nЛевая четверть: {sum(left)}")
