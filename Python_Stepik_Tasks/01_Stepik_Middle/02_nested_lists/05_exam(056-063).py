#  -------------------------------------------------------------------------------------------------
#  TASK 056 (Каждый n-ый элемент)
#  -------------------------------------------------------------------------------------------------
#  На вход программе подается строка текста, содержащая символы и число n. Из данной строки формируется список.
#  Напишите программу, которая разделяет список на вложенные подсписки так,
#  что n последовательных элементов принадлежат разным подспискам.
#  -------------------------------------------------------------------------------------------------

# chars = [i for i in input().split()]
# num, arr = int(input()), []
# for _ in range(num):
#     arr.append([])
# temp = 0
# for i in range(len(chars)):
#     arr[temp].append(chars[i])
#     temp += 1
#     if temp >= num:
#         temp = 0
# print(arr)

#  -------------------------------------------------------------------------------------------------
#  TASK 057 (Максимальный в области 2)
#  -------------------------------------------------------------------------------------------------
#  Напишите программу, которая выводит максимальный элемент в заштрихованной области квадратной матрицы. (справа, внизу)
#  -------------------------------------------------------------------------------------------------

# n, arr = int(input()), []
# for _ in range(n):
#     arr.append([int(i) for i in input().split()])
# mx = arr[n-1][n-1]
# for i in range(n):
#     for j in range(n):
#         if j == n - i - 1 or i < j and i > n - 1 - j or i > j and i > n - 1 - j:
#             if arr[i][j] > mx:
#                 mx = arr[i][j]
# print(mx)

#  -------------------------------------------------------------------------------------------------
#  TASK 058 (Транспонирование матрицы)
#  -------------------------------------------------------------------------------------------------
#  Напишите программу, которая транспонирует квадратную матрицу.
#  -------------------------------------------------------------------------------------------------

# n, arr = int(input()), []
# for _ in range(n):
#     arr.append([int(i) for i in input().split()])
# for i in range(n):
#     for j in range(n):
#         print(str(arr[j][i]).ljust(3), end=" ")
#     print()

#  -------------------------------------------------------------------------------------------------
#  TASK 059 (Снежинка)
#  -------------------------------------------------------------------------------------------------
#  На вход программе подается нечетное натуральное число n (n >= 3). Напишите программу,
#  которая создает матрицу размером n×n заполнив её символами '.' Затем заполните символами '*' среднюю строку
#  и столбец матрицы, главную и побочную диагональ матрицы.
#  Выведите полученную матрицу на экран, разделяя элементы пробелами.
#  -------------------------------------------------------------------------------------------------

# import math
# n, arr = int(input()), []
# for i in range(n):
#     arr.append([])
#     for j in range(n):
#         if i == j or j == n - i - 1:
#             arr[i].append('*')
#         elif i == math.ceil(n / 2-1) or j == math.ceil(n / 2-1):
#             arr[i].append('*')
#         else:
#             arr[i].append('.')
# for i in range(n):
#     for j in range(n):
#         print(str(arr[j][i]).ljust(3), end=" ")
#     print()

#  -------------------------------------------------------------------------------------------------
#  TASK 060 (Симметричная матрица)
#  -------------------------------------------------------------------------------------------------
#  Напишите программу проверки симметричности квадратной матрицы относительно побочной диагонали.
#  -------------------------------------------------------------------------------------------------

# n, arr, flag = int(input()), [], True
# for _ in range(n):
#     arr.append([int(i) for i in input().split()])
# for i in range(n):
#     for j in range(n):
#         if arr[i][j] != arr[n - j - 1][n - i - 1]:
#             flag = False
# if flag:
#     print("YES")
# else:
#     print("NO")

#  -------------------------------------------------------------------------------------------------
#  TASK 061 (Латинский квадрат)
#  -------------------------------------------------------------------------------------------------
#  Латинским квадратом порядка n называется квадратная матрица размером n×n, каждая строка и каждый столбец
#  которой содержат все числа от 1 до n. Напишите программу, которая проверяет,
#  является ли заданная квадратная матрица латинским квадратом.
#  -------------------------------------------------------------------------------------------------

# n, arr, flag = int(input()), [], True
# num = sum(range(1, n+1))
# for _ in range(n):
#     arr.append([int(i) for i in input().split()])
# for i in range(n):
#     temp = num
#     for j in range(n):
#         temp -= arr[i][j]
#     if temp != 0:
#         flag = False
# for i in range(n):
#     temp = num
#     for j in range(n):
#         temp -= arr[j][i]
#     if temp != 0:
#         flag = False
# if flag:
#     print("YES")
# else:
#     print("NO")

#  -------------------------------------------------------------------------------------------------
#  TASK 062 (Ходы ферзя)
#  -------------------------------------------------------------------------------------------------
#  На шахматной доске 8×8 стоит ферзь. Отметьте положение ферзя на доске и все клетки, которые бьет ферзь.
#  Клетку, где стоит ферзь, отметьте буквой Q, клетки, которые бьет ферзь, отметьте символами *,
#  остальные клетки заполните точками.
#  -------------------------------------------------------------------------------------------------

# arr = []
# s=input()
# y, x = 8 - int(s[-1]), 'abcdefgh'.find(s[0])
# for i in range(8):
#     arr.append([])
#     for j in range(8):
#             if y == j or x == i:
#                 arr[i].append('*')
#             elif abs(y - j) == abs(x - i):
#                 arr[i].append('*')
#             else:
#                 arr[i].append('.')
# arr[x][y] = "Q"
# for i in range(8):
#     for j in range(8):
#         print(str(arr[j][i]).ljust(3), end=" ")
#     print()

#  -------------------------------------------------------------------------------------------------
#  TASK 063 (Диагонали параллельные главной)
#  -------------------------------------------------------------------------------------------------
#  На вход программе подается натуральное число n. Напишите программу,
#  которая создает матрицу размером n×n и заполняет её по следующему правилу:
#  на главной диагонали на месте каждого элемента должно стоять число 0;
#  на двух диагоналях, прилегающих к главной, число 1;
#  на следующих двух диагоналях число 2, и т.д.
#  -------------------------------------------------------------------------------------------------

# n = int(input())
# arr = [[0] * n for i in range(n)]
# for i in range(n):
#     for j in range(n):
#         arr[i][j] = abs(i - j)
# for i in range(n):
#     for j in range(n):
#         print(str(arr[j][i]).ljust(3), end=" ")
#     print()
