# ---------------------------------------------------------------------------------------------
# LIST (СПИСОК)
# ---------------------------------------------------------------------------------------------
# # Список – упорядоченная последовательность определённых значений, которые
# # могут повторяться. Количество элементов списка может быть произвольным.
# #
# # Для создания списка следует записать его элементы
# # через запятую в квадратных скобках.
#
# # int_list – список из четырёх целых чисел
# int_list = [1, 2, 3, 5]
# # char_list – список, состоящий из четырёх символов
# char_list = ['a', 'c', 'z', 'x']
# # empty_list – пустой список
# empty_list = []
#
# print('Список чисел:', int_list)
# print('Список символов:', char_list)
# print('Пустой список:', empty_list)

# Как и для других расмотренных типов данных, для типа list
# существует соответствующая функция-конструктор, которая
# создаёт список из значения другого типа.
# ---------------------------------------------------------------------------------------------
# # Создание пустого списка
# empty_list = list()
# print(empty_list)
#
# # Создание списка из последовательности range
# # (актуально для Python 3.x; в Python 2.x range
# # и так возвращает список, а последовательность
# # создаёт функция xrange)
# numbers = list(range(1000))
# print(numbers)
#
# # Создание списка символов из строки
# chars = list("a string")
# print(chars)
# ---------------------------------------------------------------------------------------------
# ИНДЕКСАЦИЯ СПИСКОВ
# ---------------------------------------------------------------------------------------------
# # Можно получать значение элемента по его индексу (номеру).
# # Индексация начинается с нуля.
#
# # Создание списка чисел
# my_list = [5, 7, 9, 1, 1, 2]
#
# # Вывод первого и второго значений
# print(my_list[0])
# print(my_list[1])
#
# # Ввод индекса
# index = int(input('Введите номер элемента: '))
# # Получение элемента
# element = my_list[index]
# # Вывод значения на экран
# print(element)
# ---------------------------------------------------------------------------------------------
# # Можно также использовать отрицательные индексы.
# # В таком случае обход элементов начинается не с первого,
# # а с последнего. Индекс последнего элемента списка – -1,
# # предпоследнего – -2 и т.д.
#
# # Создание списка чисел
# my_list = [5, 7, 9, 1, 1, 2]
#
# # Получение предпоследнего значения
# pre_last = my_list[-2]  # pre_last == 1
# print(pre_last)
#
# # Вычисление суммы первого и последнего значений
# result = my_list[0] + my_list[-1]
# print(result)
# ---------------------------------------------------------------------------------------------
# # Можно получить группу элементов по их индексам.
# # Эта операция называется срезом списка (list slicing).
#
# # Создание списка чисел
# my_list = [5, 7, 9, 1, 1, 2]
#
# # Получение среза списка от нулевого (первого) элемента (включая его)
# # до третьего (четвёртого) (не включая)
# sub_list = my_list[0:3]
# # Вывод полученного списка
# print(sub_list)
#
# # Вывод элементов списка от второго до предпоследнего
# print(my_list[2:-2])
# # Вывод элементов списка от четвёртого (пятого) до пятого (шестого)
# print(my_list[4:5])
# ---------------------------------------------------------------------------------------------
# # При получении срезов можно указывать шаг.
#
# # Создание списка чисел
# my_list = [5, 7, 9, 1, 1, 2]
#
# # Выбор каждого второго значения списка, не включая последний элемент
# sub_list = my_list[0:-1:2]
# # Вывод полученного списка
# print(sub_list)
#
# # Вывод элементов списка от второго (третьего) до предпоследнего с шагом два
# print(my_list[2:-2:2])
# # Вывод всех элементов списка, кроме первого, в обратном порядке
# print(my_list[-1:0:-1])
# ---------------------------------------------------------------------------------------------
# # Любой из параметров среза можно пропускать
# # (при условии соблюдения правильной расстановки двоеточий).
# # Значение по умолчанию для начала списка – 0,
# # конца списка – длина списка, шага – 1.
#
# # Создание списка чисел
# my_list = [5, 7, 9, 1, 1, 2]
#
# # Вывод элементов списка от второго (третьего) значения до конца списка
# print(my_list[2:])
# # Вывод всех элементов списка от начала до предпоследнего элемента
# print(my_list[:-2])
# # Вывод всех элементов списка в обратном порядке
# print(my_list[::-1])
# ---------------------------------------------------------------------------------------------
# ОПЕРАТОР IN
# ---------------------------------------------------------------------------------------------
# # Для проверки вхождения элемента в список используется операция in
#
# # Создание списка
# my_list = [5, 7, 9, 1, 1, 2]
#
# # Ввод значения
# value = int(input('Введите число: '))
#
# # Проверка, находится ли данное число в списке
# if value in my_list:
#     print('Число входит в список')
# else:
#     print('Число не входит в список')
# ---------------------------------------------------------------------------------------------
# ФУНКЦИЯ LEN
# ---------------------------------------------------------------------------------------------
# # Создание списка
# my_list = [1, 5, 1, 3, 7, 8, 124]
#
# # Вывод количества элеметов списка
# print(len(my_list))
# ---------------------------------------------------------------------------------------------
# РАБОТА СО СТРОКАМИ, КАК СО СПИСКАМИ
# ---------------------------------------------------------------------------------------------
# # Создание строки
# string = "a string"
#
# # Вывод отдельных символов строки
# print(string[0])   # 'a'
# print(string[2])   # 's'
# print(string[-1])  # 'g'
# ---------------------------------------------------------------------------------------------
# # Создание строки
# string = "a string"
#
# # Вывод срезов строки
# print(string[2:5])  # str
# print(string[:5])   # a str
# print(string[2:])   # string
# print(string[::2])  # asrn
#
# # Получение отдельных элементов строки и их конкатенация
# print(string[2] + string[-3:])  # sing
# ---------------------------------------------------------------------------------------------
# # Ввод строки
# string = input('Введите строку: ')
#
# # Проверка, есть ли в данной строке символ q
# if 'q' in string:
#     print('В этой строке есть символ "q"')
# else:
#     print('В этой строке нет символа "q"')
# ---------------------------------------------------------------------------------------------
# # Ввод строки
# string = input('Введите строку: ')
#
# # Вывод длины строки
# print('Длина этой строки:', len(string))
# ---------------------------------------------------------------------------------------------
# APPEND
# ---------------------------------------------------------------------------------------------
# # Создание пустого списка
# my_list = []
#
# # Метод append добавляет значение в список
# my_list.append(3)
# my_list.append(5)
# my_list.append(my_list[0] + my_list[1])
#
# # Вывод списка на экран
# print(my_list)
# ---------------------------------------------------------------------------------------------
# DEL
# ---------------------------------------------------------------------------------------------
# # Создание списка чисел
# my_list = [5, 1, 5, 7, 8, 1, 0, -23]
#
# # Вывод списка
# print(my_list)
#
# # Оператор del удаляет заданный элемент
# del my_list[2]
#
# # Вывод списка
# print(my_list)
# ---------------------------------------------------------------------------------------------
# ЗАМЕНА ЭЛЕМЕНТА В СПИСКЕ
# ---------------------------------------------------------------------------------------------
# # Создание списка чисел
# my_list = [5, 1, 5, 7, 8, 1, 0, -23]
#
# # Вывод списка
# print(my_list)
#
# # Получение длины списка
# length = len(my_list)
#
# # Ввод индекса
# index = length
# while not -length <= index < length:
#     index = int(input('Введите индекс элемента списка (от %d до %d): '
#                       % (-length, length - 1)))
#
# # Ввод нового значения
# value = int(input('Введите новое значение заданного элемента: '))
#
# # Изменение элемента списка
# my_list[index] = value
#
# # Вывод списка на экран
# print(my_list)
# ---------------------------------------------------------------------------------------------
# ЧИСЛА ФИБОНАЧЧИ ЧЕРЕЗ СПИСКИ
# ---------------------------------------------------------------------------------------------
# # Числа Фибоначчи
#
# # Количество чисел в последовательности
# n = 10
# # Список чисел Фибоначчи (изначально - две единицы)
# fibs = [1, 1]
#
# # Повторяем n - 2 раз, так как два числа уже в списке
# for i in range(n - 2):
#     # Добавляем сумму двух последних чисел
#     fibs.append(fibs[i] + fibs[i + 1])
#
# # Вывод списка на экран
# print(fibs)
